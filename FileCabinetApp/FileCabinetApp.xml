<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FileCabinetApp</name>
    </assembly>
    <members>
        <member name="T:FileCabinetApp.CommandHandlers.AppCommandRequest">
            <summary>
            Represents request for command with given parameters.
            </summary>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.AppCommandRequest.Command">
            <summary>
            Gets requested command.
            </summary>
            <value>Requested command.</value>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.AppCommandRequest.Parameters">
            <summary>
            Gets parameters for requested command.
            </summary>
            <value>Parameters for requested command.</value>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.CommandHandlerBase">
            <summary>
            Abstract hadnler for command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.CommandHandlerBase.FileCabinetApp#CommandHandlers#ICommandHandler#Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles the command request.
            </summary>
            /// <param name="request">Request with data to handle.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.CommandHandlerBase.SetNext(FileCabinetApp.CommandHandlers.ICommandHandler)">
            <summary>
            Sets next handler if current is unsuitable.
            </summary>
            <param name="handler">Handler to set.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.CommandHandlerBase.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles the command in its own way.
            </summary>
            <param name="request">Request for command to handle.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.CreateCommandHandler">
            <summary>
            Handles the create command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.CreateCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.CreateCommandHandler"/> class.
            </summary>
            <param name="service">Service to work with.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.CreateCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles the create command request.
            </summary>
            <param name="request">Request with data to handle.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.EditCommandHandler">
            <summary>
            Handles the edit command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.EditCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.EditCommandHandler"/> class.
            </summary>
            <param name="service">Service to work with.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.EditCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles the edit command request.
            </summary>
            /// <param name="request">Request with data to handle.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.ExitCommandHandler">
            <summary>
            Handles the exit command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.ExitCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService,System.Action{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.ExitCommandHandler"/> class.
            </summary>
            <param name="service">Setvice to work with.</param>
            <param name="setProgramRunning">For stopping program.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.ExitCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles the exit command request.
            </summary>
            /// <param name="request">Request with data to handle.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.ExportCommandHandler">
            <summary>
            Handles the export command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.ExportCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.ExportCommandHandler"/> class.
            </summary>
            <param name="service">Service to work with.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.ExportCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles the exit command request.
            </summary>
            /// <param name="request">Request with data to handle.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.FindCommandHandler">
            <summary>
            Handles the find command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.FindCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService,System.Action{System.Collections.Generic.IEnumerable{Models.FileCabinetRecord}})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.FindCommandHandler"/> class.
            </summary>
            <param name="service">Service to work with.</param>
            <param name="printer">Prints the records in its own way.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.FindCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles the find command request.
            </summary>
            /// <param name="request">Request with data to handle.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.HelpCommandHandler">
            <summary>
            Handles the help command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.HelpCommandHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.HelpCommandHandler"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.HelpCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles the help command request.
            </summary>
            /// <param name="request">Request with data to handle.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.ImportCommandHandler">
            <summary>
            Handles the import command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.ImportCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.ImportCommandHandler"/> class.
            </summary>
            <param name="service">Service to work with.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.ImportCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles the import command request.
            </summary>
            /// <param name="request">Request with data to handle.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.ListCommandHandler">
            <summary>
            Handles the list command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.ListCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService,System.Action{System.Collections.Generic.IEnumerable{Models.FileCabinetRecord}})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.ListCommandHandler"/> class.
            </summary>
            <param name="service">Service to work with.</param>
            <param name="printer">Prints the records in its own way.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.ListCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles the list command request.
            </summary>
            /// <param name="request">Request with data to handle.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.PurgeCommandHandler">
            <summary>
            Handles the purge command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.PurgeCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.PurgeCommandHandler"/> class.
            </summary>
            <param name="service">Service to work with.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.PurgeCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles the purge command request.
            </summary>
            /// <param name="request">Request with data to handle.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.RemoveCommandHandler">
            <summary>
            Handles the remove command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.RemoveCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.RemoveCommandHandler"/> class.
            </summary>
            <param name="service">Service to work with.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.RemoveCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles the remove command request.
            </summary>
            /// <param name="request">Request with data to handle.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.StatCommandHandler">
            <summary>
            Handles the stat command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.StatCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExactCommandHandlers.StatCommandHandler"/> class.
            </summary>
            <param name="service">Service to work with.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExactCommandHandlers.StatCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles the stat command request.
            </summary>
            /// <param name="request">Request with data to handle.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ICommandHandler">
            <summary>
            Interface for command handle.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ICommandHandler.SetNext(FileCabinetApp.CommandHandlers.ICommandHandler)">
            <summary>
            Sets next handler if current is unsuitable.
            </summary>
            <param name="handler">Handler to set.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ICommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles the command request.
            </summary>
            /// <param name="request">Request with data to handle.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase">
            <summary>
            Handles command which requires work with service.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase"/> class.
            </summary>
            <param name="service">Service to work with.</param>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.Service">
            <summary>
            Gets service with which one this handler works.
            </summary>
            <value>Service with which one this handler works.</value>
        </member>
        <member name="T:FileCabinetApp.Extensions.ValidatorBuilderExtensions">
            <summary>
            Extensions for <see cref="T:FileCabinetApp.Validators.ValidatorBuilder"/>.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Extensions.ValidatorBuilderExtensions.CreateDefault(FileCabinetApp.Validators.ValidatorBuilder)">
            <summary>
            Creates validator with <see cref="T:FileCabinetApp.Validators.DefaultValidatorRules"/> rules.
            </summary>
            <param name="builder">Builder to set validators.</param>
            <returns>returns validator with <see cref="T:FileCabinetApp.Validators.DefaultValidatorRules"/> rules.</returns>
        </member>
        <member name="M:FileCabinetApp.Extensions.ValidatorBuilderExtensions.CreateCustom(FileCabinetApp.Validators.ValidatorBuilder)">
            <summary>
            Creates validator with <see cref="T:FileCabinetApp.Validators.CustomValidatorRules"/> rules.
            </summary>
            <param name="builder">Builder to set validators.</param>
            <returns>returns validator with <see cref="T:FileCabinetApp.Validators.CustomValidatorRules"/> rules.</returns>
        </member>
        <member name="T:FileCabinetApp.Helpers.RecordHelper">
            <summary>
            Some help with working with records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Helpers.RecordHelper.ReadRecordDataFromConsole(System.String,Models.PersonalData@)">
            <summary>
            Reads record from console.
            </summary>
            <param name="dateTimeFormat">Format for input datetime values.</param>
            <param name="personalData">Resulting personal data.</param>
        </member>
        <member name="T:FileCabinetApp.Meters.ServiceLogger">
            <summary>
            Logs all method calls and their args.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceLogger.#ctor(FileCabinetApp.Services.IFileCabinetService,System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Meters.ServiceLogger"/> class.
            </summary>
            <param name="service">Service to work with.</param>
            <param name="writer">Writer to log all calls.</param>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceLogger.CreateRecord(Models.PersonalData)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceLogger.EditRecord(System.Int32,Models.PersonalData)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceLogger.FindByField(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceLogger.GetRecords">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceLogger.GetStat">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceLogger.MakeSnapshot">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceLogger.Purge">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceLogger.Remove(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceLogger.Restore(FileCabinetApp.Services.FileCabinetServiceSnapshot)">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.Meters.ServiceMeter">
            <summary>
            Measures how many ticks it took to method complete.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceMeter.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Meters.ServiceMeter"/> class.
            </summary>
            <param name="service">Service to work with.</param>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceMeter.CreateRecord(Models.PersonalData)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceMeter.EditRecord(System.Int32,Models.PersonalData)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceMeter.FindByField(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceMeter.GetRecords">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceMeter.GetStat">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceMeter.MakeSnapshot">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceMeter.Purge">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceMeter.Remove(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Meters.ServiceMeter.Restore(FileCabinetApp.Services.FileCabinetServiceSnapshot)">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.Program">
            <summary>
            Interacts with user.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Program.EncodingUsed">
            <summary>
            Gets encodind used in this app.
            </summary>
            <value>Encodind used in this app.</value>
        </member>
        <member name="P:FileCabinetApp.Program.ValidationRules">
            <summary>
            Gets validation rules used in this app.
            </summary>
            <value>Validation rules used in this app.</value>
        </member>
        <member name="M:FileCabinetApp.Program.Main(System.String[])">
            <summary>
            Entry point.
            </summary>
            <param name="consoleArgs">Arguments passed via console.</param>
        </member>
        <member name="T:FileCabinetApp.Services.FileCabinetFileSystemService">
            <summary>
            Stores records with personal information; manages the creation, editing, finding the records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFileSystemService.#ctor(System.IO.FileStream,FileCabinetApp.Validators.IRecordValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Services.FileCabinetFileSystemService"/> class.
            </summary>
            <param name="fileStream">Stream to save records.</param>
            <param name="validator">Validator for checking records.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFileSystemService.CreateRecord(Models.PersonalData)">
            <summary>
            Create record from given parameters.
            </summary>
            <param name="personalData">Represents data of a person.</param>
            <returns>Returns the id of created record.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFileSystemService.EditRecord(System.Int32,Models.PersonalData)">
            <summary>
            Edit record with the given id.
            </summary>
            <param name="id">Id of record to edit.</param>
            <param name="newData">New personal data for record.</param>
            <exception cref="T:System.ArgumentException">No record matching given id.</exception>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFileSystemService.FindByField(System.String,System.String)">
            <summary>
            Find record by value of given field.
            </summary>
            <param name="fieldName">Name of field to search.</param>
            <param name="value">Value of <paramref name="fieldName"/> field to search.</param>
            <returns>Array of found records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFileSystemService.GetRecords">
            <summary>
            Get all stored records.
            </summary>
            <returns>All stored records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFileSystemService.GetStat">
            <summary>
            Get count of stored records.
            </summary>
            <returns>Count of stored records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFileSystemService.MakeSnapshot">
            <summary>
            Makes snapshot of present records.
            </summary>
            <returns>Snapshot of present records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFileSystemService.Restore(FileCabinetApp.Services.FileCabinetServiceSnapshot)">
            <summary>
            Restore records from snapshot.
            </summary>
            <param name="snapshot">Snapshot contatining records to restore.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFileSystemService.Remove(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFileSystemService.Purge">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.Services.FileCabinetMemoryService">
            <summary>
            Stores records with personal information; manages the creation, editing, finding the records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.#ctor(FileCabinetApp.Validators.IRecordValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Services.FileCabinetMemoryService"/> class.
            </summary>
            <param name="validator">Validates personal data for record.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.MakeSnapshot">
            <summary>
            Makes snapshot of present records.
            </summary>
            <returns>Snapshot of present records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.CreateRecord(Models.PersonalData)">
            <summary>
            Create record from given parameters.
            </summary>
            <param name="personalData">Represents data of a person.</param>
            <returns>Returns the id of created record.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.EditRecord(System.Int32,Models.PersonalData)">
            <summary>
            Edit record with the given id.
            </summary>
            <param name="id">Id of record to edit.</param>
            <param name="newData">New personal data for record.</param>
            <exception cref="T:System.ArgumentException">No record matching given id.</exception>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.FindByField(System.String,System.String)">
            <summary>
            Find record by value of given field.
            </summary>
            <param name="fieldName">Name of field to search.</param>
            <param name="value">Value of <paramref name="fieldName"/> field to search.</param>
            <returns>Array of found records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.GetRecords">
            <summary>
            Get all stored records.
            </summary>
            <returns>All stored records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.GetStat">
            <summary>
            Get count of stored records.
            </summary>
            <returns>Count of stored records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.Restore(FileCabinetApp.Services.FileCabinetServiceSnapshot)">
            <summary>
            Restore records from snapshot.
            </summary>
            <param name="snapshot">Snapshot contatining records to restore.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.Remove(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.Purge">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.Services.FileCabinetRecordCsvReader">
            <summary>
            Reads records from csv file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetRecordCsvReader.#ctor(System.IO.StreamReader)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Services.FileCabinetRecordCsvReader"/> class.
            </summary>
            <param name="reader">Reader to read data from.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetRecordCsvReader.ReadAll">
            <summary>
            Reads all records.
            </summary>
            <returns>All readed records.</returns>
        </member>
        <member name="T:FileCabinetApp.Services.FileCabinetRecordCsvWriter">
            <summary>
            Class for writing data to csv file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetRecordCsvWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Services.FileCabinetRecordCsvWriter"/> class.
            </summary>
            <param name="writer">Writer for saving data.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetRecordCsvWriter.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetRecordCsvWriter.Write(Models.FileCabinetRecord)">
            <summary>
            Writes record to given stream.
            </summary>
            <param name="record">Record to write.</param>
        </member>
        <member name="T:FileCabinetApp.Services.FileCabinetRecordStatus">
            <summary>
            Represents status of record for FileCabinetFileSystemService.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Services.FileCabinetRecordStatus.Deleted">
            <summary>
            Status of deleted record.
            </summary>
        </member>
        <member name="T:FileCabinetApp.Services.FileCabinetRecordXmlReader">
            <summary>
            Reads records from xml file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetRecordXmlReader.#ctor(System.IO.StreamReader)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Services.FileCabinetRecordXmlReader"/> class.
            </summary>
            <param name="reader">Reader to read data from.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetRecordXmlReader.ReadAll">
            <summary>
            Reads all records.
            </summary>
            <returns>All readed records.</returns>
        </member>
        <member name="T:FileCabinetApp.Services.FileCabinetRecordXmlWriter">
            <summary>
            Class for writing data to xml file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetRecordXmlWriter.#ctor(System.IO.StreamWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Services.FileCabinetRecordXmlWriter"/> class.
            </summary>
            <param name="writer">Writer for saving data.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetRecordXmlWriter.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetRecordXmlWriter.Write(Models.FileCabinetRecord)">
            <summary>
            Writes record to given stream.
            </summary>
            <param name="record">Record to write.</param>
        </member>
        <member name="T:FileCabinetApp.Services.FileCabinetServiceSnapshot">
            <summary>
            Represents snapshot of once real records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetServiceSnapshot.#ctor(Models.FileCabinetRecord[])">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Services.FileCabinetServiceSnapshot"/> class.
            </summary>
            <param name="records">Records to save.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetServiceSnapshot.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Services.FileCabinetServiceSnapshot"/> class.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Services.FileCabinetServiceSnapshot.Records">
            <summary>
            Gets readonly collection of records.
            </summary>
            <value>Readonly collection of records.</value>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetServiceSnapshot.SaveToCsv(System.IO.StreamWriter)">
            <summary>
            Saves record to csv file.
            </summary>
            <param name="writer">Writer for writing records to it.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetServiceSnapshot.SaveToXml(System.IO.StreamWriter)">
            <summary>
            Saves record to xml file.
            </summary>
            <param name="writer">Writer for writing records to it.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetServiceSnapshot.LoadFromCsv(System.IO.StreamReader)">
            <summary>
            Loads records from csv file.
            </summary>
            <param name="reader">Stream for reading.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetServiceSnapshot.LoadFromXml(System.IO.StreamReader)">
            <summary>
            Loads records from xml file.
            </summary>
            <param name="reader">Stream for reading.</param>
        </member>
        <member name="T:FileCabinetApp.Services.IFileCabinetRecordReader">
            <summary>
            Interface for reading records from stream.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetRecordReader.ReadAll">
            <summary>
            Reads all records.
            </summary>
            <returns>All readed records.</returns>
        </member>
        <member name="T:FileCabinetApp.Services.IFileCabinetRecordWriter">
            <summary>
            Interface for writing data to file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetRecordWriter.Write(Models.FileCabinetRecord)">
            <summary>
            Writes record to given stream.
            </summary>
            <param name="record">Record to write.</param>
        </member>
        <member name="T:FileCabinetApp.Services.IFileCabinetService">
            <summary>
            Stores records with personal information; manages the creation, editing, finding the records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.CreateRecord(Models.PersonalData)">
            <summary>
            Create record from given parameters.
            </summary>
            <param name="personalData">Represents data of a person.</param>
            <returns>Returns the id of created record.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.EditRecord(System.Int32,Models.PersonalData)">
            <summary>
            Edit record with the given id.
            </summary>
            <param name="id">Id of record to edit.</param>
            <param name="newData">New personal data for record.</param>
            <exception cref="T:System.ArgumentException">No record matching given id.</exception>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.FindByField(System.String,System.String)">
            <summary>
            Find record by value of given field.
            </summary>
            <param name="fieldName">Name of field to search.</param>
            <param name="value">Value of <paramref name="fieldName"/> field to search.</param>
            <returns>Array of found records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.GetRecords">
            <summary>
            Get all stored records.
            </summary>
            <returns>All stored records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.GetStat">
            <summary>
            Get count of stored records.
            </summary>
            <returns>Count of stored records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.MakeSnapshot">
            <summary>
            Makes snapshot of present records.
            </summary>
            <returns>Snapshot of present records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.Restore(FileCabinetApp.Services.FileCabinetServiceSnapshot)">
            <summary>
            Restore records from snapshot.
            </summary>
            <param name="snapshot">Snapshot contatining records to restore.</param>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.Remove(System.Int32)">
            <summary>
            Remove record with given id.
            </summary>
            <param name="recordId">Id of record to remove.</param>
            <returns>True if record has been deleted.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.Purge">
            <summary>
            Remove records marked as deleted.
            </summary>
            <returns>Count of deleted records.</returns>
        </member>
        <member name="T:FileCabinetApp.Validators.CompositeValidator">
            <summary>
            Contains validators.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.CompositeValidator.#ctor(System.Collections.Generic.IEnumerable{FileCabinetApp.Validators.IRecordValidator})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.CompositeValidator"/> class.
            </summary>
            <param name="validators">Validator for validating data.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.CompositeValidator.Validate(Models.PersonalData)">
            <summary>
            Validated personal data.
            </summary>
            <param name="personalData">Personal data to validate.</param>
        </member>
        <member name="T:FileCabinetApp.Validators.AverageMarkValidator">
            <summary>
            Check average mark for valid value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.AverageMarkValidator.averageMarkMinValue">
            <summary>
            Minimum valid average mark value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.AverageMarkValidator.averageMarkMaxValue">
            <summary>
            Maximum valid average mark value.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.AverageMarkValidator.#ctor(System.Decimal,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.AverageMarkValidator"/> class.
            </summary>
            <param name="averageMarkMinValue">Minimal valid value.</param>
            <param name="averageMarkMaxValue">Maximum valid value.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.AverageMarkValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.AverageMarkValidator"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.AverageMarkValidator.Validate(Models.PersonalData)">
            <summary>
            Check average mark for valid value.
            </summary>
            <param name="personalData">Containg average mark to check.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <see cref="P:Models.PersonalData.AverageMark"/> is less than <see cref="F:FileCabinetApp.Validators.AverageMarkValidator.averageMarkMinValue"/> or more than <see cref="F:FileCabinetApp.Validators.AverageMarkValidator.averageMarkMaxValue"/>.</exception>
        </member>
        <member name="T:FileCabinetApp.Validators.ClassLetterValidator">
            <summary>
            Check class letter for valid value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.ClassLetterValidator.classLetterMinValue">
            <summary>
            Minimum valid class letter value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.ClassLetterValidator.classLetterMaxValue">
            <summary>
            Maximum valid class letter value.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.ClassLetterValidator.#ctor(System.Char,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.ClassLetterValidator"/> class.
            </summary>
            <param name="classLetterMinValue">Minimal valid value.</param>
            <param name="classLetterMaxValue">Maximum valid value.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.ClassLetterValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.ClassLetterValidator"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.ClassLetterValidator.Validate(Models.PersonalData)">
            <summary>
            Check class letter for valid value.
            </summary>
            <param name="personalData">Containg class letter to check.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <see cref="P:Models.PersonalData.ClassLetter"/> is less than <see cref="F:FileCabinetApp.Validators.ClassLetterValidator.classLetterMinValue"/> or more than <see cref="F:FileCabinetApp.Validators.ClassLetterValidator.classLetterMaxValue"/>.</exception>
        </member>
        <member name="T:FileCabinetApp.Validators.DateOfBirthValidator">
            <summary>
            Check date of birth for valid value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.DateOfBirthValidator.dateOfBirthMinValue">
            <summary>
            Gets or sets minimum valid date of birth value.
            </summary>
            <value>Minimum valid date of birth value.</value>
        </member>
        <member name="F:FileCabinetApp.Validators.DateOfBirthValidator.dateOfBirthMaxValue">
            <summary>
            Gets maximum valid date of birth value.
            </summary>
            <value>Maximum valid date of birth value.</value>
        </member>
        <member name="M:FileCabinetApp.Validators.DateOfBirthValidator.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.DateOfBirthValidator"/> class.
            </summary>
            <param name="dateOfBirthMinValue">Minimal valid value.</param>
            <param name="dateOfBirthMaxValue">Maximum valid value.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.DateOfBirthValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.DateOfBirthValidator"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.DateOfBirthValidator.Validate(Models.PersonalData)">
            <summary>
            Check date of birth for valid value.
            </summary>
            <param name="personalData">Containg date of birth to check.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <see cref="P:Models.PersonalData.DateOfBirth"/> is less than <see cref="F:FileCabinetApp.Validators.DateOfBirthValidator.dateOfBirthMinValue"/> or more than <see cref="F:FileCabinetApp.Validators.DateOfBirthValidator.dateOfBirthMaxValue"/>.</exception>
        </member>
        <member name="T:FileCabinetApp.Validators.FirstNameValidator">
            <summary>
            Check first name for valid value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.FirstNameValidator.firstNameMinLen">
            <summary>
            Minimal valid first name length.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.FirstNameValidator.firstNameMaxLen">
            <summary>
            Maximun valid last name length.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.FirstNameValidator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.FirstNameValidator"/> class.
            </summary>
            <param name="firstNameMinLen">Minimal valid name length.</param>
            <param name="firstNameMaxLen">Maximum valid name length.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.FirstNameValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.FirstNameValidator"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.FirstNameValidator.Validate(Models.PersonalData)">
            <summary>
            Check first name for valid value.
            </summary>
            <param name="personalData">Containg first name to check.</param>
            <exception cref="T:System.ArgumentNullException">If <see cref="P:Models.PersonalData.FirstName"/> is null.</exception>
            <exception cref="T:System.ArgumentException">If <see cref="P:Models.PersonalData.FirstName"/> has invalid length or contains invalid symbols.</exception>
        </member>
        <member name="T:FileCabinetApp.Validators.LastNameValidator">
            <summary>
            Check last name for valid value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.LastNameValidator.lastNameMinLen">
            <summary>
            Minimum valid last name length.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.LastNameValidator.lastNameMaxLen">
            <summary>
            Maximum valid last name length.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.LastNameValidator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.LastNameValidator"/> class.
            </summary>
            <param name="lastNameMinLen">Minimal valid name length.</param>
            <param name="lastNameMaxLen">Maximum valid name length.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.LastNameValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.LastNameValidator"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.LastNameValidator.Validate(Models.PersonalData)">
            <summary>
            Check last name for valid value.
            </summary>
            <param name="personalData">Containg last name to check.</param>
            <exception cref="T:System.ArgumentNullException">If <see cref="P:Models.PersonalData.LastName"/> is null.</exception>
            <exception cref="T:System.ArgumentException">If <see cref="P:Models.PersonalData.LastName"/> has invalid length or contains invalid symbols.</exception>
        </member>
        <member name="T:FileCabinetApp.Validators.SchoolGradeValidator">
            <summary>
            Check school grade for valid value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.SchoolGradeValidator.schoolGradeMinValue">
            <summary>
            Minimum valid school grade value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.SchoolGradeValidator.schoolGradeMaxValue">
            <summary>
            Maximum valid school grade value.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.SchoolGradeValidator.#ctor(System.Int16,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.SchoolGradeValidator"/> class.
            </summary>
            <param name="schoolGradeMinValue">Minimal valid value.</param>
            <param name="schoolGradeMaxValue">Maximum valid value.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.SchoolGradeValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.SchoolGradeValidator"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.SchoolGradeValidator.Validate(Models.PersonalData)">
            <summary>
            Check school grade for valid value.
            </summary>
            <param name="personalData">Containg school grade to check.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <see cref="P:Models.PersonalData.SchoolGrade"/> is less than <see cref="F:FileCabinetApp.Validators.SchoolGradeValidator.schoolGradeMinValue"/> or more than <see cref="F:FileCabinetApp.Validators.SchoolGradeValidator.schoolGradeMaxValue"/>.</exception>
        </member>
        <member name="T:FileCabinetApp.Validators.CustomValidatorRules">
            <summary>
            Custom rules for validating.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.CustomValidatorRules.NameMinLen">
            <summary>
            Gets or sets minimum length for name.
            </summary>
            <value>Minimum length for name.</value>
        </member>
        <member name="F:FileCabinetApp.Validators.CustomValidatorRules.NameMaxLen">
            <summary>
            Gets or sets maximum length for name.
            </summary>
            <value>Maximum length for name.</value>
        </member>
        <member name="F:FileCabinetApp.Validators.CustomValidatorRules.SchoolGradeMinValue">
            <summary>
            Minimum valid school grade value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.CustomValidatorRules.SchoolGradeMaxValue">
            <summary>
            Maximum valid school grade value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.CustomValidatorRules.AverageMarkMinValue">
            <summary>
            Minimum valid average mark value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.CustomValidatorRules.AverageMarkMaxValue">
            <summary>
            Maximum valid average mark value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.CustomValidatorRules.ClassLetterMinValue">
            <summary>
            Minimum valid class letter value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.CustomValidatorRules.ClassLetterMaxValue">
            <summary>
            Maximum valid class letter value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.CustomValidatorRules.DateOfBirthMinValue">
            <summary>
            Gets or sets minimum valid date of birth value.
            </summary>
            <value>Minimum valid date of birth value.</value>
        </member>
        <member name="F:FileCabinetApp.Validators.CustomValidatorRules.DateOfBirthMaxValue">
            <summary>
            Gets or sets maximum valid date of birth value.
            </summary>
            <value>Maximum valid date of birth value.</value>
        </member>
        <member name="T:FileCabinetApp.Validators.DefaultValidatorRules">
            <summary>
            Default rules for validating.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.DefaultValidatorRules.FirstNameMinLen">
            <summary>
            Minimal valid first name length.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.DefaultValidatorRules.FirstNameMaxLen">
            <summary>
            Maximun valid last name length.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.DefaultValidatorRules.LastNameMinLen">
            <summary>
            Minimum valid last name length.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.DefaultValidatorRules.LastNameMaxLen">
            <summary>
            Maximum valid last name length.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.DefaultValidatorRules.SchoolGradeMinValue">
            <summary>
            Minimum valid school grade value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.DefaultValidatorRules.SchoolGradeMaxValue">
            <summary>
            Maximum valid school grade value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.DefaultValidatorRules.AverageMarkMinValue">
            <summary>
            Minimum valid average mark value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.DefaultValidatorRules.AverageMarkMaxValue">
            <summary>
            Maximum valid average mark value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.DefaultValidatorRules.ClassLetterMinValue">
            <summary>
            Minimum valid class letter value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.DefaultValidatorRules.ClassLetterMaxValue">
            <summary>
            Maximum valid class letter value.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Validators.DefaultValidatorRules.DateOfBirthMinValue">
            <summary>
            Gets or sets minimum valid date of birth value.
            </summary>
            <value>Minimum valid date of birth value.</value>
        </member>
        <member name="P:FileCabinetApp.Validators.DefaultValidatorRules.DateOfBirthMaxValue">
            <summary>
            Gets maximum valid date of birth value.
            </summary>
            <value>Maximum valid date of birth value.</value>
        </member>
        <member name="T:FileCabinetApp.Validators.IRecordValidator">
            <summary>
            Interface for validation personal data.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.IRecordValidator.Validate(Models.PersonalData)">
            <summary>
            Validated personal data.
            </summary>
            <param name="personalData">Personal data to validate.</param>
        </member>
        <member name="T:FileCabinetApp.Validators.ValidationValuesBounds">
            <summary>
            Bounds for values to validate.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationValuesBounds.FirstName">
            <summary>
            Gets or sets valid first name minimum and maximum lengths.
            </summary>
            <value></value>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationValuesBounds.LastName">
            <summary>
            Gets or sets valid last name minimum and maximum lengths.
            </summary>
            <value>Valid last name minimum and maximum lengths.</value>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationValuesBounds.DateOfBirth">
            <summary>
            Gets or sets valid date of birth minimum and maximum values.
            </summary>
            <value>Valid date of birth minimum and maximum values.</value>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationValuesBounds.SchoolGrade">
            <summary>
            Gets or sets valid school grade minimum and maximum values.
            </summary>
            <value>Valid school grade minimum and maximum values.</value>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationValuesBounds.AverageMark">
            <summary>
            Gets or sets valid average mark minimum and maximum values.
            </summary>
            <value>Valid average mark minimum and maximum values.</value>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationValuesBounds.ClassLetter">
            <summary>
            Gets or sets valid class letter minimum and maximum values.
            </summary>
            <value>Valid class letter minimum and maximum values.</value>
        </member>
        <member name="T:FileCabinetApp.Validators.ValidationValuesBounds.Bounds`1">
            <summary>
            Represents bound for value to validate.
            </summary>
            <typeparam name="T">Type of value.</typeparam>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidationValuesBounds.Bounds`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.ValidationValuesBounds.Bounds`1"/> struct.
            </summary>
            <param name="min">Minimal valid value.</param>
            <param name="max">Maximum valid value.</param>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationValuesBounds.Bounds`1.Min">
            <summary>
            Gets or sets minimal valid value.
            </summary>
            <value>Minimal valid value.</value>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationValuesBounds.Bounds`1.Max">
            <summary>
            Gets or sets maximum valid value.
            </summary>
            <value>Maximum valid value.</value>
        </member>
        <member name="T:FileCabinetApp.Validators.ValidatorBuilder">
            <summary>
            Builder than creates validator.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateFirstName(System.Int32,System.Int32)">
            <summary>
            Adds first name validating.
            </summary>
            <param name="firstNameMinLen">Minimal valid length of first name.</param>
            <param name="firstNameMaxLen">Maximum valid length of first name.</param>
            <returns>Returns itself.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateLastName(System.Int32,System.Int32)">
            <summary>
            Adds last name validating.
            </summary>
            <param name="lastNameMinLen">Minimal valid length of last name.</param>
            <param name="lastNameMaxLen">Maximum valid length of last name.</param>
            <returns>Returns itself.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateDateOfBirth(System.DateTime,System.DateTime)">
            <summary>
            Adds date of birth validating.
            </summary>
            <param name="dateOfBirthMinValue">Minimal date of birth valid value.</param>
            <param name="dateOfBirthMaxValue">Maximum date of birth valid value.</param>
            <returns>Returns itself.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateSchoolGrade(System.Int16,System.Int16)">
            <summary>
            Adds date of birth validating.
            </summary>
            <param name="schoolGradeMinValue">Minimal date of birth valid value.</param>
            <param name="schoolGradeMaxValue">Maximum date of birth valid value.</param>
            <returns>Returns itself.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateAverageMark(System.Decimal,System.Decimal)">
            <summary>
            Adds average mark validating.
            </summary>
            <param name="averageMarkMinValue">Minimal average mark valid value.</param>
            <param name="averageMarkMaxValue">Maximum average mark valid value.</param>
            <returns>Returns itself.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateClassLetter(System.Char,System.Char)">
            <summary>
            Adds class letter validating.
            </summary>
            <param name="classLetterMinValue">Minimal class letter valid value.</param>
            <param name="classLetterMaxValue">Maximum class letter valid value.</param>
            <returns>Returns itself.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.Create">
            <summary>
            Creates validator with setted parameters validators.
            </summary>
            <returns>Returns validator with setted parameters validators.</returns>
        </member>
    </members>
</doc>
